{"version":3,"sources":["utils/selectors.ts","components/hooks/useForm.tsx","components/AlertDialog.tsx","components/Modal.tsx","reducers/boardReducer.ts","components/BoardCard.tsx","components/Loader.tsx","components/RetroDashboard.tsx","components/RetroHeader.tsx","pages/RetroHome.tsx","reducers/itemReducer.ts","components/EditItem.tsx","components/RetroCard.tsx","components/AddItem.tsx","components/RetroColumn.tsx","components/CreateList.tsx","utils/dragndrop.ts","reducers/listReducer.ts","components/RetroColumnHeader.tsx","components/RetroBoardSingle.tsx","pages/RetroBoard.tsx","App.tsx","utils/api.ts","saga/ListSaga.ts","utils/types.ts","saga/BoardSaga.ts","saga/ItemSaga.ts","saga/RootSaga.ts","store.ts","index.tsx"],"names":["rootSelector","state","boardsSelector","createSelector","board","boards","loadingSelector","loading","listSelector","currentBoard","list","listsSelector","lists","itemSelector","item","itemsSelector","items","useForm","initialState","useState","formValues","setFormValues","handleChange","event","prevValues","target","name","value","AlertDialogBar","title","isOpen","onClose","onClick","cancelRef","useRef","leastDestructiveRef","fontSize","fontWeight","ref","colorScheme","ml","Modal1","onOpen","modalTitle","triggerName","children","isFullWidth","boardSlice","createSlice","error","reducers","setLoading","action","payload","fetchBoards","fetchActiveBoard","createBoard","push","deleteBoard","filter","_id","updateBoardDetails","id","find","board_title","updateBoard","clearBoard","boardActions","actions","Grid","styled","div","BoardCard","props","dispatch","useDispatch","useDisclosure","header","deleteModalOpen","setdeleteModalOpen","borderWidth","borderRadius","overflow","backgroundColor","padding","height","to","color","background","as","FaEllipsisV","onSubmit","ev","preventDefault","length","type","board_id","boardId","err","console","log","spacing","placeholder","onChange","LoaderWrapper","Loading","size","BoardsContainer","RetroDashBoard","React","memo","toast","useToast","useSelector","useEffect","templateColumns","base","sm","md","lg","justifyContent","gap","map","description","status","duration","isClosable","Header","nav","attrs","className","HeaderBanner","Container","RetroHeader","RetroHome","itemSlice","currentItem","loadAllItems","deleteItem","i","item_id","addItem","itemIdx","findIndex","updateItem","removeFromList","reorderItem","source","destination","position","s","order","itemActions","EditItem","content","item_title","handleEditingItem","a","resize","focusBorderColor","variant","RetroCard","provided","snapshot","useCallback","isDragging","display","innerRef","alignItems","transition","draggableProps","dragHandleProps","overflowWrap","direction","Button","AddItem","list_id","useParams","open","setOpen","handleAddingItem","ObjectID","toString","leftIcon","fluid","width","RetroCardContainer","BottomListButton","RetroColumn","droppableProvided","memoizedListItems","useMemo","sort","b","index","draggableId","CreateList","list_title","getPrevAndNextItem","droppedItemId","isSameList","droppableId","destItems","droppedItem","destSortedItems","getSortedItems","afterDropDestinationItems","arr","newIndex","arrClone","oldIndex","indexOf","splice","moveItemWithinArray","insertItemIntoArray","prevItem","nextItem","listSlice","currentList","loadAllLists","updateList","l","addList","listIdx","listActions","RetroColumnHeader","RetroColumnListHeader","editMode","setEditMode","handleSubmit","key","autoFocus","onBlur","onKeyDown","ColumnsWrapper","main","RetroColumnWrapper","RetroBoardSingle","params","currentBoardLists","onDragStart","onDragEnd","result","isSamePosition","isPositionChanged","calculateItemPosition","source_list_id","destination_list_id","minWidth","socket","setSocket","newSocket","io","query","transports","on","data","close","App","exact","path","component","RetroBoard","httpClient","axios","create","baseURL","process","fetchAllBoardsAPI","get","fetchActiveBoardAPI","createBoardAPI","post","updateBoardAPI","put","deleteBoardAPI","delete","createListAPI","createItemAPI","reorderItemAPI","deleteItemAPI","updateItemAPI","updateListAPI","createList","watchListSaga","call","takeLatest","getBoards","watchBoardSaga","all","createItem","watchItemSaga","success","rootSaga","fork","listSaga","boardSaga","itemSaga","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","boardReducer","listReducer","itemReducer","middleware","getDefaultMiddleware","concat","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f8632b7e.chunk.js","sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../store\";\n\nconst rootSelector = (state: RootState) => state;\n\nexport const boardsSelector = createSelector(\n  rootSelector,\n  (state) => state.board.boards\n);\n\nexport const loadingSelector = createSelector(\n  rootSelector,\n  (state) => state.board.loading\n);\nexport const boardSelector = createSelector(\n  rootSelector,\n  (state) => state.board.currentBoard\n);\n\n// list\n\nexport const listSelector = createSelector(rootSelector, (state) => state.list);\n\nexport const listsSelector = createSelector(\n  listSelector,\n  (state) => state.lists\n);\n\n// item\n\nexport const itemSelector = createSelector(rootSelector, (state) => state.item);\n\nexport const itemsSelector = createSelector(\n  itemSelector,\n  (state) => state.items\n);\n","import React, { useState } from \"react\";\n\nexport const useForm = <T,>(initialState: T) => {\n  const [formValues, setFormValues] = useState<T>(initialState);\n\n  const handleChange = (\n    event:\n      | React.ChangeEvent<HTMLInputElement>\n      | React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    setFormValues((prevValues: any) => ({\n      ...prevValues,\n      [event.target.name]: event.target.value,\n    }));\n  };\n\n  return { formValues, handleChange, setFormValues };\n};\n","import {\n  AlertDialog,\n  AlertDialogBody,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogContent,\n  AlertDialogOverlay,\n  Button,\n} from \"@chakra-ui/react\";\n\nimport { useRef } from \"react\";\n\ninterface Props {\n  title: string;\n  isOpen: boolean;\n  onClose: () => void;\n  onClick: () => void;\n}\n\nexport default function AlertDialogBar({\n  title,\n  isOpen,\n  onClose,\n  onClick,\n}: Props) {\n  const cancelRef = useRef(null);\n\n  return (\n    <>\n      <AlertDialog\n        isOpen={isOpen}\n        leastDestructiveRef={cancelRef}\n        onClose={onClose}\n      >\n        <AlertDialogOverlay>\n          <AlertDialogContent>\n            <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\n              {title}\n            </AlertDialogHeader>\n\n            <AlertDialogBody>\n              Are you sure? You can't undo this action afterwards.\n            </AlertDialogBody>\n\n            <AlertDialogFooter>\n              <Button ref={cancelRef} onClick={onClose}>\n                Cancel\n              </Button>\n              <Button colorScheme=\"red\" onClick={onClick} ml={3}>\n                Delete\n              </Button>\n            </AlertDialogFooter>\n          </AlertDialogContent>\n        </AlertDialogOverlay>\n      </AlertDialog>\n    </>\n  );\n}\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  Button,\n  ModalBody,\n  ModalCloseButton,\n} from \"@chakra-ui/react\";\n\ninterface Props {\n  children?: React.ReactNode;\n  triggerName?: string;\n  modalTitle: string;\n  isOpen: boolean;\n  onClose: () => void;\n  onOpen: () => void;\n}\n\nexport default function Modal1({\n  onClose,\n  onOpen,\n  modalTitle,\n  isOpen,\n  triggerName,\n  children,\n}: Props) {\n  return (\n    <>\n      {triggerName && (\n        <Button isFullWidth onClick={onOpen}>\n          {triggerName}\n        </Button>\n      )}\n\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>{modalTitle}</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>{children}</ModalBody>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n}\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { Board } from \"../interfaces\";\n\ninterface BoardState {\n  boards: Board[];\n  currentBoard: Board | null;\n  loading: boolean;\n  error: string;\n}\n\nconst initialState = {\n  boards: [],\n  currentBoard: null,\n  loading: false,\n  error: \"\",\n} as BoardState;\n\nconst boardSlice = createSlice({\n  name: \"board\",\n  initialState,\n  reducers: {\n    setLoading(state, action) {\n      state.loading = action.payload;\n    },\n    fetchBoards(state, action) {\n      state.boards = action.payload;\n    },\n    fetchActiveBoard(state, action) {\n      state.currentBoard = action.payload;\n    },\n    createBoard(state, action) {\n      state.boards.push(action.payload);\n    },\n\n    deleteBoard(state, action) {\n      state.boards = state.boards.filter(\n        (board) => board._id !== action.payload._id\n      );\n    },\n    updateBoardDetails(state, action) {\n      const id = action.payload._id;\n      const board = state.boards.find((board) => board._id === id);\n      board!.board_title = action.payload.board_title;\n    },\n\n    updateBoard(state, action) {\n      state.currentBoard = action.payload;\n    },\n    clearBoard(state) {\n      state.boards = [];\n    },\n  },\n});\nexport const boardActions = boardSlice.actions;\nexport default boardSlice;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport React, { useState } from \"react\";\nimport AlertDialog from \"./AlertDialog\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"./Modal\";\nimport {\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Button,\n  Box,\n  Icon,\n  Text,\n  Stack,\n  InputGroup,\n  Input,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n\nimport { FaEllipsisV } from \"react-icons/fa\";\nimport { useForm } from \"./hooks/useForm\";\nimport { boardActions } from \"../reducers/boardReducer\";\ninterface Props {\n  to?: string;\n  boardId: string;\n  header: string;\n}\n\nconst Grid = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst BoardCard = (props: Props) => {\n  const dispatch = useDispatch();\n  const { isOpen, onClose, onOpen } = useDisclosure();\n  const { formValues, handleChange } = useForm({\n    board_title: props.header,\n  });\n\n  const [deleteModalOpen, setdeleteModalOpen] = useState(false);\n\n  const handleEditBoard = (ev: React.FormEvent) => {\n    try {\n      ev.preventDefault();\n      if (formValues.board_title.length < 1) {\n        return;\n      }\n      dispatch({\n        type: \"UPDATE_BOARD_REQUESTED\",\n        payload: { board_id: props.boardId, ...formValues },\n      });\n      dispatch(\n        boardActions.updateBoardDetails({ _id: props.boardId, ...formValues })\n      );\n      onClose();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <>\n      <Box\n        borderWidth=\"1px\"\n        borderRadius=\"lg\"\n        overflow=\"hidden\"\n        backgroundColor=\"gray.100\"\n        padding=\"10px\"\n        height=\"60px\"\n      >\n        <Grid>\n          <Link to={props.to ?? \"\"}>\n            <Text fontSize=\"lg\" color=\"#4b5489\" fontWeight=\"700\">\n              {props.header}\n            </Text>\n          </Link>\n          <Menu>\n            <MenuButton background=\"none !important\">\n              <Icon as={FaEllipsisV} />\n            </MenuButton>\n            <MenuList>\n              <MenuItem onClick={onOpen}>Edit</MenuItem>\n              <MenuItem>Archive</MenuItem>\n              <MenuItem onClick={() => setdeleteModalOpen(true)}>\n                Delete\n              </MenuItem>\n            </MenuList>\n          </Menu>\n        </Grid>\n      </Box>\n\n      <Modal\n        modalTitle=\"Edit Board Details\"\n        isOpen={isOpen}\n        onOpen={onOpen}\n        onClose={onClose}\n      >\n        <form onSubmit={handleEditBoard}>\n          <Stack spacing={3}>\n            <InputGroup>\n              <Input\n                type=\"text\"\n                name=\"board_title\"\n                value={formValues.board_title}\n                placeholder=\"Board Title\"\n                onChange={handleChange}\n              />\n            </InputGroup>\n\n            <div>\n              <Button type=\"submit\">Update board</Button>\n            </div>\n          </Stack>\n        </form>\n      </Modal>\n      <AlertDialog\n        isOpen={deleteModalOpen}\n        onClose={() => setdeleteModalOpen(false)}\n        onClick={() => {\n          dispatch({\n            type: \"DELETE_BOARD_REQUESTED\",\n            payload: props.boardId,\n          });\n          setdeleteModalOpen(false);\n        }}\n        title=\"Delete Board\"\n      />\n    </>\n  );\n};\n\nexport default BoardCard;\n","import { Dimmer, Loader } from \"semantic-ui-react\";\nimport styled from \"styled-components\";\nimport { Spinner } from \"@chakra-ui/react\";\n\nconst LoaderWrapper = styled.div`\n  padding: 100px 0;\n`;\n\nconst Loading = () => (\n  <LoaderWrapper>\n    <Spinner size=\"lg\" />\n  </LoaderWrapper>\n);\n\nexport default Loading;\n","import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { boardsSelector, loadingSelector } from \"../utils/selectors\";\nimport { useForm } from \"./hooks/useForm\";\n\nimport { Grid, Stack } from \"@chakra-ui/layout\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input, InputGroup, Button, useToast, Box } from \"@chakra-ui/react\";\nimport BoardCard from \"./BoardCard\";\nimport styled from \"styled-components\";\nimport NewModal from \"./Modal\";\nimport Loading from \"./Loader\";\n\nconst BoardsContainer = styled.div`\n  padding-top: 50px;\n  width: 95%;\n  margin: 0 auto;\n`;\n\nconst RetroDashBoard = React.memo(() => {\n  const dispatch = useDispatch();\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const boards = useSelector(boardsSelector);\n  const loading = useSelector(loadingSelector);\n  const { formValues, handleChange } = useForm({\n    board_title: \"\",\n  });\n\n  useEffect(() => {\n    dispatch({ type: \"FETCH_BOARDS_REQUESTED\" });\n  }, [dispatch]);\n\n  const handleCreateBoard = (ev: React.FormEvent) => {\n    try {\n      ev.preventDefault();\n      if (formValues.board_title.length < 1) {\n        return;\n      }\n      dispatch({ type: \"CREATE_BOARD_REQUESTED\", payload: formValues });\n      toast({\n        title: \"Board Created\",\n        description: \"We've created your board for you.\",\n        status: \"success\",\n        duration: 4000,\n        isClosable: true,\n      });\n      onClose();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  if (loading) {\n    return <Loading />;\n  }\n\n  return (\n    <>\n      <BoardsContainer>\n        <Grid\n          templateColumns={{\n            base: \"1fr\",\n            sm: \"repeat(2, 1fr)\",\n            md: \"repeat(3, 1fr)\",\n            lg: \"repeat(5, 1fr)\",\n          }}\n          justifyContent=\"center\"\n          gap={6}\n        >\n          {boards?.map((board) => {\n            return (\n              <BoardCard\n                to={`/board/${board._id}`}\n                header={board.board_title}\n                boardId={board._id}\n              />\n            );\n          })}\n          <Box>\n            <NewModal\n              modalTitle=\"Create Board\"\n              isOpen={isOpen}\n              onOpen={onOpen}\n              onClose={onClose}\n              triggerName=\"Create new Board\"\n            >\n              <form onSubmit={handleCreateBoard}>\n                <Stack spacing={3}>\n                  <InputGroup>\n                    <Input\n                      type=\"text\"\n                      name=\"board_title\"\n                      value={formValues.board_title}\n                      placeholder=\"Board Title\"\n                      onChange={handleChange}\n                    />\n                  </InputGroup>\n\n                  <div>\n                    <Button type=\"submit\">Create Board</Button>\n                  </div>\n                </Stack>\n              </form>\n            </NewModal>\n          </Box>\n        </Grid>\n      </BoardsContainer>\n    </>\n  );\n});\n\nexport default RetroDashBoard;\n","import styled from \"styled-components\";\n\nconst Header = styled.nav.attrs({ className: \"header-bar\" })`\n  background-color: #4863a9;\n  color: #ffffff;\n  box-shadow: 0 4px 12px 0 rgb(0 0 0 / 5%);\n  font-weight: 800;\n  padding: 10px 0;\n`;\nconst HeaderBanner = styled.div`\n  font-size: 18px;\n`;\n\nconst Container = styled.div`\n  width: 95%;\n  margin: 0 auto;\n`;\nexport default function RetroHeader() {\n  return (\n    <Header>\n      <Container>\n        <HeaderBanner>Retro Board</HeaderBanner>{\" \"}\n      </Container>\n    </Header>\n  );\n}\n","import RetroDashBoard from \"../components/RetroDashboard\";\nimport RetroHeader from \"../components/RetroHeader\";\n\nexport const RetroHome = () => {\n  return (\n    <>\n      <RetroHeader />\n      <RetroDashBoard />\n    </>\n  );\n};\n\nexport default RetroHome;\n","import { createSlice, PayloadAction, current } from \"@reduxjs/toolkit\";\nimport { Item } from \"../interfaces\";\n\ninterface ItemState {\n  items: Item[];\n  currentItem: Item | null;\n  loading: boolean;\n  error: string;\n}\n\nconst initialState = {\n  items: [],\n  currentItem: null,\n  loading: false,\n  error: \"\",\n} as ItemState;\n\nconst itemSlice = createSlice({\n  name: \"item\",\n  initialState,\n  reducers: {\n    loadAllItems(state, action: PayloadAction<Item[]>) {\n      state.items = action.payload;\n    },\n    deleteItem(state, action) {\n      state.items = state.items.filter((i) => i._id !== action.payload.item_id);\n    },\n    addItem(state, action) {\n      const itemIdx = state.items.findIndex(\n        (item) => item._id === action.payload._id\n      );\n\n      if (itemIdx === -1) {\n        state.items.push(action.payload);\n      } else {\n        state.items[itemIdx] = action.payload;\n      }\n    },\n    updateItem(state, action) {\n      const itemIdx = state.items.findIndex(\n        (item) => item._id === action.payload._id\n      );\n      state.items[itemIdx] = action.payload;\n    },\n    removeFromList(state, action: PayloadAction<Item>) {\n      state.items.filter((item) => item._id !== action.payload._id);\n    },\n    reorderItem(state, action) {\n      const { source, destination, item_id, position } = action.payload;\n      const itemIdx = state.items.findIndex((s) => s._id === item_id);\n      const item = state.items[itemIdx];\n\n      if (source === destination) {\n        item.order = position;\n      } else {\n        const item = state.items[itemIdx];\n        item.order = position;\n        item.list = destination;\n      }\n    },\n  },\n});\nexport const itemActions = itemSlice.actions;\nexport default itemSlice;\n","import { Button, Textarea, Stack } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"./hooks/useForm\";\n\ninterface Props {\n  isOpen: boolean;\n  content: string;\n  item_id: string;\n  onClose: () => void;\n}\nfunction EditItem({ isOpen, onClose, content, item_id }: Props) {\n  const dispatch = useDispatch();\n  const { formValues, handleChange, setFormValues } = useForm({\n    item_title: content,\n  });\n\n  const handleEditingItem = async (ev: React.FormEvent) => {\n    try {\n      ev.preventDefault();\n      dispatch({\n        type: \"UPDATE_ITEM_REQUESTED\",\n        payload: { item_id, ...formValues },\n      });\n      setFormValues({ item_title: \"\" });\n      onClose();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <>\n      {isOpen && (\n        <form onSubmit={handleEditingItem}>\n          <Stack spacing={2}>\n            <Textarea\n              name=\"item_title\"\n              onChange={handleChange}\n              placeholder=\"Do something!\"\n              value={formValues.item_title}\n              resize=\"none\"\n              focusBorderColor=\"blue.500\"\n              background=\"white\"\n            />\n            <div>\n              <Button\n                // leftIcon={<FaPlus />}\n                type=\"submit\"\n                colorScheme=\"teal\"\n                variant=\"solid\"\n              >\n                Save\n              </Button>\n            </div>\n          </Stack>\n        </form>\n      )}\n    </>\n  );\n}\n\nexport default EditItem;\n","import React, { memo, useCallback } from \"react\";\nimport { DraggableProvided, DraggableStateSnapshot } from \"react-beautiful-dnd\";\nimport { useDispatch } from \"react-redux\";\nimport { itemActions } from \"../reducers/itemReducer\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport {\n  Icon,\n  useDisclosure,\n  Menu,\n  MenuButton,\n  Button,\n  MenuList,\n  MenuItem,\n} from \"@chakra-ui/react\";\nimport { FaEllipsisV } from \"react-icons/fa\";\nimport EditItem from \"./EditItem\";\n\ninterface Props {\n  content: string;\n  item_id: string;\n  list_id: string;\n  children?: React.ReactChild;\n  provided: DraggableProvided;\n  snapshot: DraggableStateSnapshot;\n}\n\nconst RetroCard = memo(({ content, item_id, provided, snapshot }: Props) => {\n  const dispatch = useDispatch();\n  const { isOpen, onClose, onOpen } = useDisclosure();\n\n  const deleteItem = useCallback(() => {\n    dispatch(itemActions.deleteItem({ item_id }));\n    dispatch({\n      type: \"DELETE_ITEM_REQUESTED\",\n      payload: { item_id },\n    });\n  }, [item_id, dispatch]);\n\n  if (isOpen) {\n    return (\n      <EditItem\n        item_id={item_id}\n        content={content}\n        isOpen={isOpen}\n        onClose={onClose}\n      />\n    );\n  }\n  return (\n    <Box\n      padding=\"5px 12px\"\n      background={snapshot.isDragging ? \"rgba(226, 231, 245, 255)\" : \"white\"}\n      display=\"flex\"\n      justifyContent=\"space-between\"\n      ref={provided.innerRef}\n      alignItems=\"center\"\n      transition=\"background 100ms linear\"\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n    >\n      <Text overflowWrap=\"anywhere\">{content}</Text>\n      <Stack direction=\"row\">\n        <Menu>\n          <MenuButton as={Button} background=\"none !important\">\n            <Icon as={FaEllipsisV} />\n          </MenuButton>\n          <MenuList>\n            <MenuItem onClick={onOpen}>Edit</MenuItem>\n            <MenuItem onClick={deleteItem}>Delete</MenuItem>\n          </MenuList>\n        </Menu>\n      </Stack>\n    </Box>\n  );\n});\n\nexport default RetroCard;\n","import { Button, Textarea, Stack } from \"@chakra-ui/react\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"./hooks/useForm\";\nimport { FaPlus } from \"react-icons/fa\";\nimport { useParams } from \"react-router\";\nimport { ObjectID } from \"bson\";\nimport { itemActions } from \"../reducers/itemReducer\";\n\ninterface Props {\n  list_id: string;\n}\nfunction AddItem({ list_id }: Props) {\n  const { boardId } = useParams<{ boardId: string }>();\n  const dispatch = useDispatch();\n  const { formValues, handleChange, setFormValues } = useForm({\n    item_title: \"\",\n  });\n\n  const [open, setOpen] = useState(false);\n\n  const handleAddingItem = async (ev: React.FormEvent) => {\n    try {\n      ev.preventDefault();\n      const id = new ObjectID().toString();\n\n      dispatch(\n        itemActions.addItem({\n          _id: id,\n          list: list_id,\n          board: boardId,\n          ...formValues,\n        })\n      );\n\n      dispatch({\n        type: \"CREATE_ITEM_REQUESTED\",\n        payload: {\n          list: list_id,\n          board: boardId,\n          _id: id,\n          ...formValues,\n        },\n      });\n\n      setFormValues({ item_title: \"\" });\n      setOpen(false);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  return (\n    <>\n      {!open && (\n        <Button\n          leftIcon={<FaPlus />}\n          fluid\n          width=\"100%\"\n          colorScheme=\"facebook\"\n          onClick={() => {\n            setOpen(!open);\n          }}\n        >\n          Add a Item\n        </Button>\n      )}\n      {open && (\n        <form onSubmit={handleAddingItem}>\n          <Stack spacing={2}>\n            <Textarea\n              name=\"item_title\"\n              onChange={handleChange}\n              placeholder=\"Add a Item\"\n              value={formValues.item_title}\n              resize=\"none\"\n              focusBorderColor=\"blue.500\"\n              background=\"white\"\n            />\n            <div>\n              <Button\n                leftIcon={<FaPlus />}\n                type=\"submit\"\n                colorScheme=\"teal\"\n                variant=\"solid\"\n              >\n                Create\n              </Button>\n            </div>\n          </Stack>\n        </form>\n      )}\n    </>\n  );\n}\n\nexport default AddItem;\n","import React, { memo, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport RetroCard from \"./RetroCard\";\nimport { Item } from \"../interfaces\";\nimport AddItem from \"./AddItem\";\nimport { useSelector } from \"react-redux\";\nimport { Draggable, DroppableProvided } from \"react-beautiful-dnd\";\nimport { itemsSelector } from \"../utils/selectors\";\n\nconst RetroCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  position: relative;\n  gap: 10px;\n  min-height: 1px;\n`;\n\nconst BottomListButton = styled.div`\n  margin-top: 10px;\n`;\n\ninterface Props {\n  items: Item[];\n  list_id: string;\n  title: string;\n  children?: React.ReactNode;\n  droppableProvided?: DroppableProvided;\n}\n\nconst RetroColumn = memo(({ list_id, droppableProvided }: Props) => {\n  const items = useSelector(itemsSelector);\n\n  const memoizedListItems = useMemo(() => {\n    return items\n      .filter((item) => item.list === list_id)\n      .sort((a, b) => a.order - b.order);\n  }, [items, list_id]);\n\n  return (\n    <>\n      <RetroCardContainer ref={droppableProvided?.innerRef}>\n        {memoizedListItems.map((item, index) => {\n          return (\n            <Draggable draggableId={item._id} index={index} key={item._id}>\n              {(provided, snapshot) => (\n                <RetroCard\n                  provided={provided}\n                  snapshot={snapshot}\n                  content={item.item_title}\n                  item_id={item._id}\n                  list_id={list_id}\n                />\n              )}\n            </Draggable>\n          );\n        })}\n\n        {droppableProvided?.placeholder}\n      </RetroCardContainer>\n      <BottomListButton>\n        <AddItem list_id={list_id} />\n      </BottomListButton>\n    </>\n  );\n});\n\nexport default RetroColumn;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Modal from \"./Modal\";\nimport { useForm } from \"./hooks/useForm\";\nimport { useParams } from \"react-router\";\nimport { ObjectID } from \"bson\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input, InputGroup } from \"@chakra-ui/input\";\nimport { Stack } from \"@chakra-ui/layout\";\nimport { Button } from \"@chakra-ui/button\";\n\ninterface FormParam {\n  boardId: string;\n}\nconst CreateList = () => {\n  const dispatch = useDispatch();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const { boardId } = useParams<FormParam>();\n\n  const { formValues, handleChange, setFormValues } = useForm({\n    list_title: \"\",\n  });\n\n  const handleCreateList = (ev: React.FormEvent) => {\n    try {\n      ev.preventDefault();\n\n      if (formValues.list_title.length < 1) {\n        return;\n      }\n      const id = new ObjectID().toString();\n\n      dispatch({\n        type: \"CREATE_LIST_REQUESTED\",\n        payload: { ...formValues, _id: id, board_id: boardId },\n      });\n      setFormValues({ list_title: \"\" });\n      onClose();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <>\n      <Modal\n        modalTitle=\"List Creation\"\n        triggerName=\"Create a List\"\n        isOpen={isOpen}\n        onClose={onClose}\n        onOpen={onOpen}\n      >\n        <form onSubmit={handleCreateList}>\n          <Stack spacing={3}>\n            <InputGroup>\n              <Input\n                type=\"text\"\n                name=\"list_title\"\n                value={formValues.list_title}\n                placeholder=\"List Title\"\n                onChange={handleChange}\n              />\n            </InputGroup>\n            <div>\n              <Button type=\"submit\">Create List</Button>\n            </div>\n          </Stack>\n        </form>\n      </Modal>\n    </>\n  );\n};\n\nexport default CreateList;\n","import { DraggableLocation } from \"react-beautiful-dnd\";\n\nimport { Item } from \"../interfaces\";\n\nexport const isPositionChanged = (\n  source: DraggableLocation,\n  destination: DraggableLocation | undefined\n) => {\n  if (!destination) return false;\n  const isSameList = destination.droppableId === source.droppableId;\n  const isSamePosition = destination.index === source.index;\n  return !isSameList || !isSamePosition;\n};\n\nexport const calculateItemPosition = (\n  items: Item[],\n  source: DraggableLocation,\n  destination: DraggableLocation | undefined,\n  droppedItemId: string\n) => {\n  const { prevItem, nextItem } = getPrevAndNextItem(\n    items,\n    source,\n    destination,\n    droppedItemId\n  );\n  let position;\n\n  if (!prevItem && !nextItem) {\n    position = 1;\n  } else if (!prevItem) {\n    position = nextItem.order - 1;\n  } else if (!nextItem) {\n    position = prevItem.order + 1;\n  } else {\n    position = prevItem.order + (nextItem.order - prevItem.order) / 2;\n  }\n  return position;\n};\n\nconst moveItemWithinArray = (\n  arr: Item[],\n  item: Item | undefined,\n  newIndex: number\n) => {\n  const arrClone = [...arr];\n  const oldIndex = arrClone.indexOf(item!);\n  arrClone.splice(newIndex, 0, arrClone.splice(oldIndex, 1)[0]);\n  return arrClone;\n};\n\nconst insertItemIntoArray = (\n  arr: Item[],\n  item: Item | undefined,\n  index: number\n) => {\n  const arrClone = [...arr];\n  arrClone.splice(index, 0, item!);\n  return arrClone;\n};\n\nconst getPrevAndNextItem = (\n  items: Item[],\n  source: DraggableLocation,\n  destination: DraggableLocation | undefined,\n  droppedItemId: string\n) => {\n  const isSameList = destination?.droppableId === source.droppableId;\n\n  const destItems = items.filter((i) => i.list === destination?.droppableId);\n\n  const droppedItem = items.find((i) => i._id === droppedItemId);\n\n  const destSortedItems = getSortedItems(destItems);\n  const afterDropDestinationItems = isSameList\n    ? moveItemWithinArray(destSortedItems, droppedItem, destination!.index)\n    : insertItemIntoArray(destSortedItems, droppedItem, destination!.index);\n\n  const prevItem = afterDropDestinationItems[destination!.index - 1];\n  const nextItem = afterDropDestinationItems[destination!.index + 1];\n\n  return { prevItem, nextItem };\n};\n\nfunction getSortedItems(items: Item[] | undefined) {\n  if (!items) return [];\n  return [...items].sort((a, b) => a.order - b.order);\n}\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { List } from \"../interfaces\";\n\ninterface ListState {\n  lists: List[];\n  currentList: List | null;\n  loading: boolean;\n  error: string;\n}\n\nconst initialState = {\n  lists: [],\n  currentList: null,\n  loading: false,\n  error: \"\",\n} as ListState;\n\nconst listSlice = createSlice({\n  name: \"list\",\n  initialState,\n  reducers: {\n    loadAllLists(state, action: PayloadAction<List[]>) {\n      state.lists = action.payload;\n    },\n    updateList(state, action) {\n      const list = state.lists.find((l) => l._id === action.payload._id);\n      if (!list) {\n        return state;\n      }\n      list.list_title = action.payload.list_title;\n    },\n    addList(state, action: PayloadAction<List>) {\n      const listIdx = state.lists.findIndex(\n        (list) => list._id === action.payload._id\n      );\n      if (listIdx === -1) {\n        state.lists.push(action.payload);\n      } else {\n        state.lists[listIdx] = action.payload;\n      }\n    },\n    removeFromList(state, action: PayloadAction<List>) {\n      state.lists.filter((lists) => lists._id !== action.payload._id);\n    },\n  },\n});\nexport const listActions = listSlice.actions;\nexport default listSlice;\n","import { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { useForm } from \"./hooks/useForm\";\nimport { Input } from \"@chakra-ui/input\";\nimport { listActions } from \"../reducers/listReducer\";\n\nconst RetroColumnHeader = styled.div`\n  font-weight: bold;\n  font-size: 1.2rem;\n\n  padding: 12px 14px;\n`;\n\ninterface Props {\n  list_title: string;\n  list_id: string;\n}\nexport default function RetroColumnListHeader({ list_title, list_id }: Props) {\n  const dispatch = useDispatch();\n\n  const [editMode, setEditMode] = useState(false);\n  const { handleChange, formValues } = useForm({ list_title: list_title });\n\n  const updateList = () => {\n    if (formValues.list_title.length < 1) {\n      return;\n    }\n    dispatch({\n      type: \"UPDATE_LIST_REQUESTED\",\n      payload: { list_id, ...formValues },\n    });\n    dispatch(listActions.updateList({ _id: list_id, ...formValues }));\n    setEditMode(false);\n  };\n  const handleSubmit = (ev: React.KeyboardEvent | React.FocusEvent) => {\n    try {\n      const { key } = ev as React.KeyboardEvent<HTMLInputElement>;\n      if (key === \"Enter\") {\n        return updateList();\n      }\n\n      // updateList();\n    } catch (err) {}\n  };\n\n  return (\n    <>\n      {editMode ? (\n        <Input\n          autoFocus\n          fontWeight=\"bold\"\n          variant=\"filled\"\n          placeholder=\"List Title\"\n          name=\"list_title\"\n          onChange={handleChange}\n          onBlur={handleSubmit}\n          onKeyDown={handleSubmit}\n          value={formValues.list_title}\n        />\n      ) : (\n        <RetroColumnHeader onClick={() => setEditMode(true)}>\n          {list_title}\n        </RetroColumnHeader>\n      )}\n    </>\n  );\n}\n","import { useCallback, useEffect } from \"react\";\nimport RetroColumn from \"./RetroColumn\";\nimport styled from \"styled-components\";\nimport { DragDropContext, Droppable, DropResult } from \"react-beautiful-dnd\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\nimport {\n  loadingSelector,\n  listsSelector,\n  itemsSelector,\n} from \"../utils/selectors\";\nimport CreateList from \"./CreateList\";\nimport { isPositionChanged, calculateItemPosition } from \"../utils/dragndrop\";\nimport Loading from \"./Loader\";\nimport { itemActions } from \"../reducers/itemReducer\";\nimport RetroColumnListHeader from \"./RetroColumnHeader\";\nimport { Box } from \"@chakra-ui/layout\";\n\nconst ColumnsWrapper = styled.main`\n  display: flex;\n  gap: 20px;\n  padding-top: 30px;\n  overflow-x: auto;\n  height: calc(100vh - 80px);\n`;\n\nconst RetroColumnWrapper = styled.div`\n  width: 300px;\n  padding: 8px;\n  background: rgb(235, 236, 240);\n  display: flex;\n  flex-direction: column;\n\n  /* height: fit-content; */\n`;\nconst Container = styled.div`\n  width: 95%;\n  margin: 0 auto;\n`;\ninterface BoardParam {\n  boardId: string;\n}\nexport default function RetroBoardSingle() {\n  const dispatch = useDispatch();\n  const params = useParams<BoardParam>();\n  const lists = useSelector(listsSelector);\n\n  const currentBoardLists = lists.filter((l) => l.board === params.boardId);\n  const items = useSelector(itemsSelector);\n\n  const loading = useSelector(loadingSelector);\n\n  useEffect(() => {\n    dispatch({ type: \"FETCH_BOARD_REQUESTED\", payload: params.boardId });\n  }, [params.boardId, dispatch]);\n\n  const onDragStart = useCallback(() => {\n    console.log(\"draggin\");\n    /*...*/\n  }, []);\n\n  const onDragEnd = useCallback(\n    (result: DropResult) => {\n      const { source, destination, draggableId } = result;\n      if (!isPositionChanged(source, destination)) return;\n      if (!destination) return;\n      const position = calculateItemPosition(\n        items,\n        source,\n        destination,\n        draggableId\n      );\n\n      dispatch(\n        itemActions.reorderItem({\n          item_id: draggableId,\n          source: source.droppableId,\n          destination: destination.droppableId,\n          position: position,\n        })\n      );\n\n      dispatch({\n        type: \"REORDER_ITEM_REQUESTED\",\n        payload: {\n          source_list_id: source.droppableId,\n          destination_list_id: destination.droppableId,\n          position: position,\n          list_id: destination?.droppableId,\n          item_id: draggableId,\n        },\n      });\n    },\n    [items, dispatch]\n  );\n\n  if (loading) {\n    return <Loading />;\n  }\n  return (\n    <Container>\n      <DragDropContext onDragStart={onDragStart} onDragEnd={onDragEnd}>\n        <ColumnsWrapper>\n          {currentBoardLists?.map((list) => {\n            return (\n              <Box>\n                <RetroColumnWrapper>\n                  <RetroColumnListHeader\n                    list_id={list._id}\n                    list_title={list.list_title}\n                  />\n                  <Droppable droppableId={list._id} key={list._id}>\n                    {(provided) => (\n                      <RetroColumn\n                        droppableProvided={provided}\n                        items={list.items}\n                        list_id={list._id}\n                        title={list.list_title}\n                      />\n                    )}\n                  </Droppable>\n                </RetroColumnWrapper>\n              </Box>\n            );\n          })}\n          <Box minWidth=\"300px\">\n            <CreateList />\n          </Box>\n        </ColumnsWrapper>\n      </DragDropContext>\n    </Container>\n  );\n}\n","import RetroBoardSingle from \"../components/RetroBoardSingle\";\nimport RetroHeader from \"../components/RetroHeader\";\nimport { useState, useEffect } from \"react\";\nimport { io, Socket } from \"socket.io-client\";\nimport { useParams } from \"react-router\";\nimport { useDispatch } from \"react-redux\";\nimport { itemActions } from \"../reducers/itemReducer\";\nimport { listActions } from \"../reducers/listReducer\";\n\ninterface boardParams {\n  boardId: string;\n}\nexport const RetroHome = () => {\n  const dispatch = useDispatch();\n  const { boardId } = useParams<boardParams>();\n  const [socket, setSocket] = useState<Socket | null>(null);\n\n  useEffect(() => {\n    const newSocket = io(\"http://localhost:5000\", {\n      query: { boardId },\n      transports: [\"websocket\"],\n    });\n\n    newSocket.on(\"new-list\", function (data) {\n      dispatch(listActions.addList(data));\n    });\n\n    newSocket.on(\"new-item\", function (data) {\n      dispatch(itemActions.addItem(data));\n    });\n\n    newSocket.on(\"updated-item\", function (data) {\n      dispatch(itemActions.updateItem(data));\n    });\n\n    newSocket.on(\"reordered-item\", function (data) {\n      const { item, source_list_id, destination_list_id, position } = data;\n      dispatch(\n        itemActions.reorderItem({\n          item_id: item._id,\n          source: source_list_id,\n          destination: destination_list_id,\n          position: position,\n        })\n      );\n    });\n\n    setSocket(socket);\n\n    return () => {\n      newSocket.close();\n    };\n  }, [boardId, socket, dispatch]);\n\n  return (\n    <>\n      <RetroHeader />\n      <RetroBoardSingle />\n    </>\n  );\n};\n\nexport default RetroHome;\n","import \"./App.css\";\nimport RetroHome from \"./pages/RetroHome\";\nimport RetroBoard from \"./pages/RetroBoard\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={RetroHome} />\n        <Route exact path=\"/board/:boardId\" component={RetroBoard} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\nimport { Board, Item, List } from \"../interfaces\";\nconst httpClient = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_URL,\n});\n\nexport const fetchAllBoardsAPI = async () => {\n  try {\n    const { data } = await httpClient.get(\"/get-boards\");\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const fetchActiveBoardAPI = async (boardId: string) => {\n  try {\n    const { data } = await httpClient.get(`/get-board/${boardId}`);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const createBoardAPI = async (payload: Partial<Board>) => {\n  try {\n    const { data } = await httpClient.post(\"/create-board\", payload);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const updateBoardAPI = async (payload: {\n  board_id: string;\n  board_title: string;\n}) => {\n  try {\n    const { data } = await httpClient.put(\n      `/update-board/${payload.board_id}`,\n      payload\n    );\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const deleteBoardAPI = async (payload: string) => {\n  try {\n    const { data } = await httpClient.delete(`/delete-board/${payload}`);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const createListAPI = async (payload: Partial<List>) => {\n  try {\n    const { data } = await httpClient.post(\"/create-list\", payload);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\n// type createItemPayload = {\n//   item_title: string;\n//   list_id: string;\n// };\nexport const createItemAPI = async (payload: Partial<Item>) => {\n  try {\n    const { data } = await httpClient.post(\"/create-item\", payload);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\ntype reorderItemPayload = {\n  item_id: string;\n  position: string;\n  list_id: string;\n};\n\nexport const reorderItemAPI = async (payload: reorderItemPayload) => {\n  try {\n    const { data } = await httpClient.put(`/reorder-item`, payload);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const deleteItemAPI = async (payload: { item_id: string }) => {\n  try {\n    const { data } = await httpClient.delete(`/delete-item/${payload.item_id}`);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const updateItemAPI = async (payload: {\n  item_id: string;\n  item_title: string;\n}) => {\n  try {\n    const { data } = await httpClient.put(\n      `/update-item/${payload.item_id}`,\n      payload\n    );\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const deleteListAPI = async (payload: { item_id: string }) => {\n  try {\n    const { data } = await httpClient.delete(`/delete-item/${payload.item_id}`);\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const updateListAPI = async (payload: {\n  list_id: string;\n  list_title: string;\n}) => {\n  try {\n    const { data } = await httpClient.put(\n      `/update-list/${payload.list_id}`,\n      payload\n    );\n    return data;\n  } catch (err) {\n    throw err;\n  }\n};\n","import { put, call, takeLatest } from \"redux-saga/effects\";\nimport { createListAPI, updateListAPI } from \"../utils/api\";\nimport { List } from \"../interfaces\";\nimport { listActions } from \"../reducers/listReducer\";\nimport { CREATE_LIST_REQUESTED, UPDATE_LIST_REQUESTED } from \"../utils/types\";\n\nfunction* createList(action: ReturnType<typeof listActions.addList>) {\n  try {\n    const result: List = yield call(createListAPI, action.payload);\n    yield put(listActions.addList(result));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* updateList(action: ReturnType<typeof listActions.updateList>) {\n  try {\n    const result: List = yield call(updateListAPI, action.payload);\n    yield put(listActions.updateList(result));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* watchListSaga() {\n  yield takeLatest(CREATE_LIST_REQUESTED, createList);\n  yield takeLatest(UPDATE_LIST_REQUESTED, updateList);\n}\n\nexport default watchListSaga;\n","export const CREATE_ITEM_REQUESTED = \"CREATE_ITEM_REQUESTED\";\nexport const REORDER_ITEM_REQUESTED = \"REORDER_ITEM_REQUESTED\";\nexport const DELETE_ITEM_REQUESTED = \"DELETE_ITEM_REQUESTED\";\nexport const UPDATE_ITEM_REQUESTED = \"UPDATE_ITEM_REQUESTED\";\n\nexport const FETCH_BOARDS_REQUESTED = \"FETCH_BOARDS_REQUESTED\";\nexport const CREATE_BOARD_REQUESTED = \"CREATE_BOARD_REQUESTED\";\nexport const FETCH_BOARD_REQUESTED = \"FETCH_BOARD_REQUESTED\";\nexport const DELETE_BOARD_REQUESTED =\n  \"DELETE_BOARD_FETCH_BOARD_REQUESTEDREQUESTED\";\nexport const UPDATE_BOARD_REQUESTED = \"UPDATE_BOARD_REQUESTED\";\n\nexport const CREATE_LIST_REQUESTED = \"CREATE_LIST_REQUESTED\";\nexport const UPDATE_LIST_REQUESTED = \"UPDATE_LIST_REQUESTED\";\n","import { put, call, takeLatest, all } from \"redux-saga/effects\";\nimport {\n  fetchAllBoardsAPI,\n  createBoardAPI,\n  fetchActiveBoardAPI,\n  deleteBoardAPI,\n  updateBoardAPI,\n} from \"../utils/api\";\nimport { Board, Item, List } from \"../interfaces\";\nimport { boardActions } from \"../reducers/boardReducer\";\nimport { itemActions } from \"../reducers/itemReducer\";\nimport { listActions } from \"../reducers/listReducer\";\nimport {\n  FETCH_BOARDS_REQUESTED,\n  FETCH_BOARD_REQUESTED,\n  CREATE_BOARD_REQUESTED,\n  DELETE_BOARD_REQUESTED,\n  UPDATE_BOARD_REQUESTED,\n} from \"../utils/types\";\n\nfunction* getBoards() {\n  try {\n    yield put(boardActions.setLoading(true));\n\n    const result: Board[] = yield call(fetchAllBoardsAPI);\n    yield put(boardActions.fetchBoards(result));\n    yield put(boardActions.setLoading(false));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* createBoard(action: ReturnType<typeof boardActions.createBoard>) {\n  try {\n    yield put(boardActions.setLoading(true));\n    const result: Board = yield call(createBoardAPI, action.payload);\n    yield put(boardActions.createBoard(result));\n    yield put(boardActions.setLoading(false));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\ntype Resp = {\n  board: Board;\n  list: List[];\n  items: Item[];\n};\nfunction* fetchActiveBoard(\n  action: ReturnType<typeof boardActions.fetchActiveBoard>\n) {\n  try {\n    yield put(boardActions.setLoading(true));\n    const result: Resp = yield call(fetchActiveBoardAPI, action.payload);\n\n    yield all([\n      put(boardActions.fetchActiveBoard(result.board)),\n      put(listActions.loadAllLists(result.list)),\n      put(itemActions.loadAllItems(result.items)),\n    ]);\n\n    yield put(boardActions.setLoading(false));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* deleteBoard(\n  action: ReturnType<typeof boardActions.fetchActiveBoard>\n) {\n  try {\n    yield put(boardActions.setLoading(true));\n    yield call(deleteBoardAPI, action.payload);\n    yield put(boardActions.deleteBoard({ _id: action.payload }));\n    yield put(boardActions.setLoading(false));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* updateBoard(\n  action: ReturnType<typeof boardActions.updateBoardDetails>\n) {\n  try {\n    const result: Board = yield call(updateBoardAPI, action.payload);\n    yield put(boardActions.updateBoardDetails(result));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* watchBoardSaga() {\n  yield takeLatest(FETCH_BOARDS_REQUESTED, getBoards);\n  yield takeLatest(CREATE_BOARD_REQUESTED, createBoard);\n  yield takeLatest(FETCH_BOARD_REQUESTED, fetchActiveBoard);\n  yield takeLatest(DELETE_BOARD_REQUESTED, deleteBoard);\n  yield takeLatest(UPDATE_BOARD_REQUESTED, updateBoard);\n}\n\nexport default watchBoardSaga;\n","import { put, call, takeLatest } from \"redux-saga/effects\";\nimport {\n  createItemAPI,\n  reorderItemAPI,\n  deleteItemAPI,\n  updateItemAPI,\n} from \"../utils/api\";\nimport {\n  CREATE_ITEM_REQUESTED,\n  DELETE_ITEM_REQUESTED,\n  UPDATE_ITEM_REQUESTED,\n  REORDER_ITEM_REQUESTED,\n} from \"../utils/types\";\nimport { Item } from \"../interfaces\";\nimport { itemActions } from \"../reducers/itemReducer\";\n\nfunction* createItem(action: ReturnType<typeof itemActions.addItem>) {\n  try {\n    const result: Item = yield call(createItemAPI, action.payload);\n    yield put(itemActions.addItem(result));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* reorderItem(action: ReturnType<typeof itemActions.reorderItem>) {\n  try {\n    const result: Item = yield call(reorderItemAPI, action.payload);\n\n    yield put(itemActions.reorderItem(result));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* updateItem(action: ReturnType<typeof itemActions.reorderItem>) {\n  try {\n    const result: Item = yield call(updateItemAPI, action.payload);\n\n    yield put(itemActions.updateItem(result));\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nfunction* deleteItem(action: ReturnType<typeof itemActions.deleteItem>) {\n  try {\n    const result: { success: boolean } = yield call(\n      deleteItemAPI,\n      action.payload\n    );\n    if (result.success) {\n      console.log(\"deleted\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n}\nfunction* watchItemSaga() {\n  yield takeLatest(CREATE_ITEM_REQUESTED, createItem);\n  yield takeLatest(REORDER_ITEM_REQUESTED, reorderItem);\n  yield takeLatest(DELETE_ITEM_REQUESTED, deleteItem);\n  yield takeLatest(UPDATE_ITEM_REQUESTED, updateItem);\n}\n\nexport default watchItemSaga;\n","import listSaga from \"./ListSaga\";\nimport boardSaga from \"./BoardSaga\";\nimport itemSaga from \"./ItemSaga\";\nimport { fork, all } from \"redux-saga/effects\";\n\nexport default function* rootSaga() {\n  yield all([fork(listSaga), fork(boardSaga), fork(itemSaga)]);\n}\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport boardReducer from \"./reducers/boardReducer\";\nimport listReducer from \"./reducers/listReducer\";\nimport itemReducer from \"./reducers/itemReducer\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"./saga/RootSaga\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = configureStore({\n  reducer: {\n    board: boardReducer.reducer,\n    list: listReducer.reducer,\n    item: itemReducer.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(sagaMiddleware),\n});\nsagaMiddleware.run(rootSaga);\n\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nimport store from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}